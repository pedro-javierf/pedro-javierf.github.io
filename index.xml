<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on PJ&#39;s Playground</title>
    <link>https://pedro-javierf.github.io/</link>
    <description>Recent content in Home on PJ&#39;s Playground</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 22 Sep 2018 20:49:36 +0200</lastBuildDate>
    
	<atom:link href="https://pedro-javierf.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hacking The 3ds 0: Resources</title>
      <link>https://pedro-javierf.github.io/devblog/hacking3ds0/</link>
      <pubDate>Sat, 22 Sep 2018 20:49:36 +0200</pubDate>
      
      <guid>https://pedro-javierf.github.io/devblog/hacking3ds0/</guid>
      <description>What is this This is an extra resources pages for storing useful information and resources related to the development of this series of articles. This includes tools, external articles, stack overflow posts, and any other kind of resource that is considered helpfull. Consecuently it is also used to store and conserve information of value.
URLs booting-process-for-arm
ARM Reset vector information
ARM Image Entrypoint Docs
ARM Boot procedure
Method for Booting ARM Based Multi-Core SoCs</description>
    </item>
    
    <item>
      <title>R4S (Spanish)</title>
      <link>https://pedro-javierf.github.io/reviews/r4s/</link>
      <pubDate>Tue, 21 Aug 2018 16:10:38 +0200</pubDate>
      
      <guid>https://pedro-javierf.github.io/reviews/r4s/</guid>
      <description></description>
    </item>
    
    <item>
      <title>SXPro (Spanish)</title>
      <link>https://pedro-javierf.github.io/reviews/sxpro/</link>
      <pubDate>Tue, 21 Aug 2018 16:10:30 +0200</pubDate>
      
      <guid>https://pedro-javierf.github.io/reviews/sxpro/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Hacking The 3ds I: Introduction</title>
      <link>https://pedro-javierf.github.io/devblog/hacking3ds1/</link>
      <pubDate>Sat, 12 Aug 2017 11:17:57 +0200</pubDate>
      
      <guid>https://pedro-javierf.github.io/devblog/hacking3ds1/</guid>
      <description>Hello back! Today, a new series begin. A &amp;ldquo;journey&amp;rdquo; into hacking the Nintendo 3DS Handheld Console starts. There are several reasons why I am going to do this series;
 Personal Interest. During the later 2014, the 3DS Scene started growing. I was there, and was told I couldn&amp;rsquo;t get anything. The obnoxious sceners and community, only working for fame and personal interest. The lack of information and documentation about hacking blindly (Which is basically what I&amp;rsquo;ll be doing here) Exploit development is exciting and challenging</description>
    </item>
    
    <item>
      <title>Hacking The 3ds II: Finding the Pattern</title>
      <link>https://pedro-javierf.github.io/devblog/hacking3ds2/</link>
      <pubDate>Mon, 12 Jun 2017 11:30:48 +0200</pubDate>
      
      <guid>https://pedro-javierf.github.io/devblog/hacking3ds2/</guid>
      <description>Hello again! I&amp;rsquo;m back with part 2: &amp;ldquo;Finding The Pattern&amp;rdquo;! In case you haven&amp;rsquo;t read yet the first blog entry, click here.
Brief Summary Back in the day, I analysed what possible entry-points the 3DS may have. We lead to the conclusion that the RAM contents were not encrypted. This is something useful. Here&#39;s proof:
 First glance at the RAM Dump. Byte class view.
 As you can see, if we search for unicode strings (remember the 3DS supports several languages, as everything should do this days, to enable non-ascii languages to work, i.</description>
    </item>
    
    <item>
      <title>Twicexploit: Windows UAC Bypass</title>
      <link>https://pedro-javierf.github.io/devblog/bypassuac/</link>
      <pubDate>Wed, 31 May 2017 11:39:11 +0200</pubDate>
      
      <guid>https://pedro-javierf.github.io/devblog/bypassuac/</guid>
      <description>Hello My Fellow Readers!
Today I&amp;rsquo;m back to write about UAC bypassing, that amazing scene that malware writers love.
 What is UAC?
Since windows vista, Microsoft implemented the so called User Account Control (UAC); a mechanism which manages processes privileges. Basically, if you have a windows account which has administrator rights, and you run an application that doesn&amp;rsquo;t requiere administrator rights, UAC will drop the unnecessary privilges; This is done to avoid malwares having full control of the computer if they get code execution; to get admin rights UAC will prompt a question windows which will ask the user for permission, making malwares&amp;rsquo; job harder.</description>
    </item>
    
    <item>
      <title>Welcome</title>
      <link>https://pedro-javierf.github.io/posts/welcome/</link>
      <pubDate>Wed, 31 May 2017 11:39:11 +0200</pubDate>
      
      <guid>https://pedro-javierf.github.io/posts/welcome/</guid>
      <description> Fellow Reader  Welcome to my new, redesigned, website. I hope you enjoy and learn from the contents here.
- Pedro Javier
 </description>
    </item>
    
  </channel>
</rss>